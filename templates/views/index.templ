package views

import (
	"glyphtones/database"
	"glyphtones/templates/components"
)

type IndexData struct {
	Ringtones        []database.RingtoneModel
	Phones           []database.PhoneModel
	Effects          []database.EffectModel
	Category         int // 0 - all
	SearchQuery      string
	SortBy           string
	AutoGenerated    bool
	NumberOfPages    int
	Page             int
	LoggedInAuthorID int
}

templ Index(data IndexData) {
	<!DOCTYPE html>
	<html lang="en">
		@components.Head("index.css", "", "")
		<body>
			@components.Header(data.LoggedInAuthorID != 0)
			<main>
				<div id="left-column-container">
					<form id="filters" hx-get="/" hx-trigger="submit, input from:input[type='checkbox'] delay:10ms, input from:input[name='s'] delay:550ms, change from:select delay:10ms" hx-target="#list-of-ringtones" hx-swap="outerHTML" hx-push-url="true">
						@components.Search(data.SearchQuery)
						@components.CategorySelect(data.Category)
						@components.Sort(data.SortBy)
						<div id="filter-container">
							@components.ResetFiltersBtn()
							<button id="show-checkboxes" type="button">Show Filters</button>
							<hr/>
							<div class="filters-column">
								<span>Phones</span>
								@components.PhonesCheckboxes(data.Phones)
								<span id="auto-generated-label">Show auto generated</span>
								@components.AutoGeneratedToggle(data.AutoGenerated)
							</div>
							<div class="filters-column">
								<span>Effects</span>
								@components.EffectsCheckboxes(data.Effects)
							</div>
						</div>
						<input type="hidden" name="p" id="aggregated-phones"/>
						<input type="hidden" name="e" id="aggregated-effects"/>
					</form>
					@components.Preview()
				</div>
				@components.ListOfRingtones(data.Ringtones, data.NumberOfPages, data.Page, data.LoggedInAuthorID, "", "index")
			</main>
			@components.Footer()
			<script src="/static/scripts/filters-dropdown.js" type="module"></script>
		</body>
	</html>
}
